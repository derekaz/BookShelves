name: BookShelves.Maui IOS CI

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'dev*'  
    paths:
      # - 'src/BookShelves.Droid/**'
      # - 'BookShelves.iOS/**'
      # - 'BookShelves.Mac/**'
      # - 'src/BookShelves.WinUI/**'
      - 'src/BookShelves.Maui/**'
      - 'src/BookShelves.Shared/**'
      - '**/*build.props'  
      - '.github/workflows/BookShelvesIOS-CI-Main.yml'
  pull_request:
    types: [opened, synchronize, reopened, closed]
    paths:
    # - 'src/BookShelves.Droid/**'
    # - 'BookShelves.iOS/**'
    # - 'BookShelves.Mac/**'
    # - 'src/BookShelves.WinUI/**'
      - 'src/BookShelves.Maui/**'
      - 'src/BookShelves.Shared/**'
      - '**/*build.props'      
      - '.github/workflows/BookShelvesIOS-CI-Main.yml'
    branches: 
      - '**'

env:
  CSPROJ: 'src/BookShelves.Maui/BookShelves.Maui.csproj'
  PUBLISH_PATH: '${{ github.workspace }}/publish-output'
  IOS_ARTIFACTS_PATH: 'artifacts_ios'
  BUILD_LOG_FILE: 'ios.binlog'

jobs:
  mac-build-ios:
    runs-on: macos-15

    steps:
      - uses: actions/checkout@v4

      - name: xcode diags 1
        run: |
            echo Mac OS version: $(sw_vers -productVersion)
            echo Installed Xcode versions:
            ls /Applications | grep 'Xcode'
            echo Currently selected Xcode:
            xcrun xcode-select --print-path

      # Select your required version
      - name: Select Xcode 16.4
        run: sudo xcode-select -s /Applications/Xcode_16.4.app #/Contents/Developer

      - name: xcode diags 2
        run: |
            echo Currently selected Xcode:
            xcrun xcode-select --print-path

      - name: Add Xcode developer tools to PATH
        run: export PATH="/Applications/Xcode_16.4.app/Contents/Developer/usr/bin:$PATH"

      - name: Set current date as env variable
        run: |
            echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
            echo "CURRENT_TIME=$(date +'%H:%M:%S')" >> $GITHUB_ENV
            echo "ASSEMBLY_BUILD_NUMBER=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
          # include-prerelease: true

      # - name: Add msbuild to PATH
      #   uses: microsoft/setup-msbuild@v2

      - name: Install MAUI Workloads
        run: |
          dotnet workload install maui --source https://api.nuget.org/v3/index.json

      - name: Cert Info 1
        env:
          CERTIFICATE_BASE64: ${{ secrets.IOS_DIST_CERTIFICATES_P12 }}
        run: |
          echo $CERTIFICATE_BASE64 | base64 --decode > cert.p12
      - name: Cert Info 2
        run: |
          openssl pkcs12 -in cert.p12 -passin pass:${{ secrets.IOS_DIST_CERTIFICATES_P12_PASSWORD }} -info -nokeys

      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.IOS_DIST_CERTIFICATES_P12 }}
          p12-password: ${{ secrets.IOS_DIST_CERTIFICATES_P12_PASSWORD }}
      
      # - name: Issuer ID
      #   run: |
      #     echo ${{ secrets.APPLE_APPSTORE_ISSUER_ID }} | sed 's/./& /g'
      # - name: Key ID
      #   run: |
      #     echo ${{ secrets.APPLE_APPSTORE_KEY_ID }} | sed 's/./& /g'
      # - name: Priv K
      #   run: |
      #     echo "${{ secrets.APPLE_APPSTORE_PRIVATE_KEY }}" | sed 's/./& /g'

      - name: Download Apple Provisioning Profiles
        uses: Apple-Actions/download-provisioning-profiles@v3
        with:
          bundle-id: 'com.azmoore.bookshelves.maui'
          issuer-id: ${{ secrets.APPLE_APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPLE_APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPLE_APPSTORE_PRIVATE_KEY }}

      # - name: Decrypt PFX File
      #   run: |
      #     echo "${{ secrets.WINDOWS_PFX_FILE }}" > cert.pfx.asc
      #     certutil -decode cert.pfx.asc cert.pfx

      # - name: Add Cert to Store
      #   run: certutil -user -q -p ${{ secrets.WINDOWS_PFX_PASSWORD }} -importpfx cert.pfx NoRoot

      - name: Create publish folder
        shell: pwsh
        run: |
          cd ${{ github.workspace }}
          mkdir -p ${{ env.PUBLISH_PATH }}

      - name: Build MAUI Mobile app
        shell: pwsh
        run: |
          dotnet publish ${{env.CSPROJ}} -v normal -bl:${{env.BUILD_LOG_FILE}} -f net9.0-ios -c Release -o ${{ env.PUBLISH_PATH }} /p:ArchiveOnBuild=true /p:ApplicationVersion=${{ env.ASSEMBLY_BUILD_NUMBER }} /p:CodesignKey="iOS Distribution" /p:CodesignProvision="BookShelves Test Profile"
          #--self-contained false -p:RuntimeIdentifierOverride=android-x64 /p:GenerateAppxPackageOnBuild=true /p:AppxPackageSigningEnabled=true /p:PackageCertificateThumbprint="${{ secrets.WINDOWS_PFX_THUMBPRINT }}"
          #dotnet publish ${{env.CSPROJ}} -bl:mobile.binlog -c Release -r win10-x64 -p:RuntimeIdentifierOverride=win10-x64 -p:WindowsPackageType=None
      
      # - name: Show publish folder content
      #   shell: pwsh
      #   run: |
      #     cd '${{ github.workspace }}'
      #     Get-Childitem -Path ${{ github.workspace }} -Include *BookShelves*.ipa -File -Recurse
      #     Get-Childitem -Path ${{ github.workspace }} -Include *.plist -File -Recurse

      - name: Show publish folder content
        shell: pwsh
        run: |
          Get-Childitem -Path ${{ env.PUBLISH_PATH }} -Include *.* -File -Recurse

      # - name: version
      #   run: echo "::set-output name=version::$(./bin/azblogfilter --version)"
      #   id: version
 
      #- name: release
      #  uses: actions/create-release@v1
      #  id: create_release
      #  with:
      #    draft: true
      #    prerelease: true
      #    release_name: ${{ env.ASSEMBLY_BUILD_NUMBER }}
      #    tag_name: ${{ env.ASSEMBLY_BUILD_NUMBER }}
      #    # body_path: 'TEST TAG' #CHANGELOG.md
      #  env:
      #    GITHUB_TOKEN: ${{ github.token }}

      - name: 'Upload app to TestFlight'
        uses: apple-actions/upload-testflight-build@v3
        with: 
          app-path: '${{ env.PUBLISH_PATH }}/bookshelves.maui.ipa' 
          issuer-id: ${{ secrets.APPLE_APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPLE_APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPLE_APPSTORE_PRIVATE_KEY }}
        if: github.event_name == 'pull_request'

      - name: Archive build log
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: '${{env.BUILD_LOG_FILE}}'

      - name: Create artifacts folder
        shell: pwsh
        run: |
          cd ${{ github.workspace }}
          mkdir -p ${{ env.IOS_ARTIFACTS_PATH }}

      - name: Copy IOS IPA package
        shell: pwsh
        run: |
          Get-Childitem -Path ${{ github.workspace }} -Include *BookShelves*.ipa -File -Recurse | Copy-Item -Destination ${{ env.IOS_ARTIFACTS_PATH }}
      
      - name: Archive build artifact
        uses: actions/upload-artifact@v4
        with:
          name: 'ios ipa'
          path: ${{ env.IOS_ARTIFACTS_PATH }} #'${{ github.workspace }}/src/BookShelves.WinUI/bin/Release/net8.0-windows10.0.19041.0/win10-x64/AppPackages/*'
          compression-level: 0

      # # BUILD
      # - name: Restore dependencies
      #   shell: pwsh
      #   run: |
      #     dotnet restore ${{ env.csproj }}

      # - name: Build Maui WinUI project
      #   shell: pwsh
      #   run: |
      #     dotnet publish ${{ env.csproj }} -c Release -f net7.0-windows10.0.19041.0

      # - name: Create artifacts folder
      #   shell: pwsh
      #   run: |
      #      cd ${{ github.workspace }}
      #      mkdir -p ${{ env.WINDOWS_ARTIFACTS_PATH }}

      # - name: Copy WinUI msix package
      #   shell: pwsh
      #   run: |
      #      Get-Childitem ï¿½Path ${{ github.workspace }} -Include *.msix -File -Recurse | Copy-Item -Destination ${{ env.WINDOWS_ARTIFACTS_PATH }}

      # #POST-BUILD
      # - name: Publish build artifacts
      #   uses: actions/upload-artifact@v2
      #   with:     
      #     name: "WinUI .NET MAUI artifacts" 
      #     path: "${{ env.WINDOWS_ARTIFACTS_PATH }}/*"
      #     if-no-files-found: error
      #     retention-days: 90
